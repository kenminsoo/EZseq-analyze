pca_list[[2]]
pca_list[[3]]
pca_list[[4]]
pca_list[[5]]
pca_list[[6]]
PCA_SK <- (pca_list[[1]]|pca_list[[5]])/(pca_list[[9]]|pca_list[[13]])
PCA_SK
ggsave('PCA_SK.pdf', plot = PCA_SK, width = 12, height = 12)
for (cohort in cohort_list){
q = 1
for (rld in cohort){
pca_list[[p]] <- plotPCA(rld, intgroup=c("fbs_exosome", "type")) +
ggtitle(paste('PCA',cell_key[q], cohort_key[n])) +
coord_fixed((ratio = 2.5)) +
ylim(-15,15) + xlim(-50, 50)
print(q)
print(n)
q = q + 1
p = p + 1
}
n = n + 1
}
PCA_SK <- (pca_list[[1]]|pca_list[[5]])/(pca_list[[9]]|pca_list[[13]])
ggsave('PCA_SK.pdf', plot = PCA_SK, width = 10, height = 10)
PCA_SK <- (pca_list[[1]]|pca_list[[2]])/(pca_list[[3]]|pca_list[[4]])
ggsave('PCA_SK.pdf', plot = PCA_SK, width = 10, height = 10)
ggsave('PCA_SK.pdf', plot = PCA_SK, width = 10, height = 6)
PCA_SK <- PCA_SK + ggtitle('Principle Component Analysis - FBS Exosomes + vs. - & Cell vs. Media')
PCA_SK
ggsave('PCA_SK.pdf', plot = PCA_SK, width = 10, height = 6)
View(PCA_SK)
PCA_SK <- PCA_SK + plot_annotation(title = 'Principle Component Analysis for Breast & Neuroblastoma Cell Lines',
subtitle = 'Based upon smRNA-seq alignment with full human genome',
caption = 'Factor 1: plus/minus; presence or absence of FBS exosomes \n
Factor 2: Sample from media or cell')
ggsave('PCA_SK.pdf', plot = PCA_SK, width = 10, height = 6)
pirna_ma[[1]] + pirna_ma[[2]]
~pirna_ma[[1]] + ~pirna_ma[[2]]
|
pirna_ma[[1]]|pirna_ma[[2]]
cohort_list_res <- list(all_res, mirna_res, pirna_res, smrna_res)
ord_list <- list()
p = 1
q = 1
n = 1
for (cohort in cohort_list_res){
q = 1
for (res in cohort){
ord_list[[paste(cell_key[q], cohort_key[n])]] <- res[order(res$pvalue),]
q = q + 1
p = p + 1
}
n = n + 1
}
View(ord_list)
library('openxlsx')
library('readxl')
write.xlsx(ord_list, 'DEGs.xlsx')
cohort_list_res <- list(all_res, mirna_res, pirna_res, smrna_res)
cohort_key_short <- list('- Whole',
'- miRNA',
'- piRNA',
'- smRNA')
ord_list <- list()
p = 1
q = 1
n = 1
for (cohort in cohort_list_res){
q = 1
for (res in cohort){
ord_list[[paste(cell_key[q], cohort_key_short[n])]] <- res[order(res$pvalue),]
q = q + 1
p = p + 1
}
n = n + 1
}
write.xlsx(ord_list, 'DEGs.xlsx')
View(all_res)
write.csv(ord_list[[1]], "test.csv")
write.xlsx(ord_list, 'DEGs.xlsx', append = TRUE)
write.xlsx(ord_list, 'DEGs.xlsx', colNames = TRUE)
write.xlsx(ord_list, 'DEGs.xlsx', rowNames = TRUE)
write.xlsx(ord_list, 'DEGs.xlsx', row.names=TRUE)
rownames(ord_list[[2]])
cohort_list_res <- list(all_res, mirna_res, pirna_res, smrna_res)
cohort_key_short <- list('- Whole',
'- miRNA',
'- piRNA',
'- smRNA')
ord_list <- list()
p = 1
q = 1
n = 1
for (cohort in cohort_list_res){
q = 1
for (res in cohort){
ord_list[[paste(cell_key[q], cohort_key_short[n])]] <- res[order(res$pvalue),]
ord_list[[paste(cell_key[q], cohort_key_short[n])]] <- tibble::rownames_to_column(ord_list[[paste(cell_key[q], cohort_key_short[n])]], "geneid")
q = q + 1
p = p + 1
}
n = n + 1
}
ord_list[[1]]
ord_list[[2]]
cohort_list_res <- list(all_res, mirna_res, pirna_res, smrna_res)
cohort_key_short <- list('- Whole',
'- miRNA',
'- piRNA',
'- smRNA')
ord_list <- list()
p = 1
q = 1
n = 1
for (cohort in cohort_list_res){
q = 1
for (res in cohort){
ord_list[[paste(cell_key[q], cohort_key_short[n])]] <- res[order(res$pvalue),]
ord_list[[p]] <- tibble::rownames_to_column(ord_list[[p]], "geneid")
q = q + 1
p = p + 1
}
n = n + 1
}
ord_list[1]
class(ord_list[1])
class(ord_list[[1]])
for (cohort in cohort_list_res){
q = 1
for (res in cohort){
ord_list[[paste(cell_key[q], cohort_key_short[n])]] <- data.frame(res[order(res$pvalue),])
ord_list[[p]] <- tibble::rownames_to_column(ord_list[[p]], "geneid")
q = q + 1
p = p + 1
}
n = n + 1
}
class(ord_list[[1]])
write.xlsx(ord_list, 'DEGs.xlsx', row.names=TRUE)
###
cohort_list_res <- list(all_res, mirna_res, pirna_res, smrna_res)
cohort_key_short <- list('- Whole',
'- miRNA',
'- piRNA',
'- smRNA')
ord_list <- list()
p = 1
q = 1
n = 1
for (cohort in cohort_list_res){
q = 1
for (res in cohort){
ord_list[[paste(cell_key[q], cohort_key_short[n])]] <- data.frame(res[order(res$pvalue),])
q = q + 1
p = p + 1
}
n = n + 1
}
write.xlsx(ord_list, 'DEGs.xlsx', row.names=TRUE)
summary(res)
resultsNames(res)
resultsNames(smrna_res[[1]])
resultsNames(smrna_dds[[1]])
rm(list=ls())
library("BiocManager") #cite
library("pasilla") #cite?
library(readr)
library("DESeq2") #cite
library("apeglm") #cite
library("RColorBrewer")
library('pheatmap')
library('ggplot2')
library('patchwork')
library('openxlsx')
library('readxl')
all <- read.delim("deseq_all.tsv",sep = '\t')
all <-all[-c(8702),]
all <-all[-c(4760),]
rownames(all) <- all$Geneid
all <- all[-1]
## ^^duplicate names exist
smrna <- read.delim("deseq_all_smrna.tsv",sep = '\t',row.names = 1)
mirna <-read.delim("deseq_mirna.tsv",sep = '\t',row.names = 1)
pirna <-read.delim("deseq_pirna.tsv",sep = '\t',row.names = 1)
View(all)
datasets <- list(all, mirna, pirna, smrna)
for (dataset in datasets){
dataset[10] <- dataset[10] - dataset[11]
dataset[16] <- dataset[16] - dataset[11]
dataset[17] <- dataset[17] - dataset[11]
dataset[18] <- dataset[18] - dataset[11]
dataset[19] <- dataset[10] - dataset[13]
dataset[20] <- dataset[20] - dataset[13]
dataset[21] <- dataset[21] - dataset[13]
dataset[22] <- dataset[21] - dataset[13]
dataset <- dataset %>%
filter_all(all_vars(. > 0))
}
library(tidyverse)
for (dataset in datasets){
dataset[10] <- dataset[10] - dataset[11]
dataset[16] <- dataset[16] - dataset[11]
dataset[17] <- dataset[17] - dataset[11]
dataset[18] <- dataset[18] - dataset[11]
dataset[19] <- dataset[10] - dataset[13]
dataset[20] <- dataset[20] - dataset[13]
dataset[21] <- dataset[21] - dataset[13]
dataset[22] <- dataset[21] - dataset[13]
dataset <- dataset %>%
filter_all(all_vars(. > 0))
}
View(dataset)
all <- read.delim("deseq_all.tsv",sep = '\t')
all <-all[-c(8702),]
all <-all[-c(4760),]
rownames(all) <- all$Geneid
all <- all[-1]
## ^^duplicate names exist
smrna <- read.delim("deseq_all_smrna.tsv",sep = '\t',row.names = 1)
mirna <-read.delim("deseq_mirna.tsv",sep = '\t',row.names = 1)
pirna <-read.delim("deseq_pirna.tsv",sep = '\t',row.names = 1)
for (dataset in datasets){
print(dataset)
dataset[10] <- dataset[10] - dataset[11]
dataset[16] <- dataset[16] - dataset[11]
dataset[17] <- dataset[17] - dataset[11]
dataset[18] <- dataset[18] - dataset[11]
dataset[19] <- dataset[10] - dataset[13]
dataset[20] <- dataset[20] - dataset[13]
dataset[21] <- dataset[21] - dataset[13]
dataset[22] <- dataset[21] - dataset[13]
dataset <- dataset %>%
filter_all(all_vars(. > 0))
}
corrected <- list()
n = 1
for (dataset in datasets){
print(dataset)
dataset[10] <- dataset[10] - dataset[11]
dataset[16] <- dataset[16] - dataset[11]
dataset[17] <- dataset[17] - dataset[11]
dataset[18] <- dataset[18] - dataset[11]
dataset[19] <- dataset[10] - dataset[13]
dataset[20] <- dataset[20] - dataset[13]
dataset[21] <- dataset[21] - dataset[13]
dataset[22] <- dataset[21] - dataset[13]
datasets[[n]] <- dataset %>%
filter_all(all_vars(. > 0))
n += 1
}
for (dataset in datasets){
print(dataset)
dataset[10] <- dataset[10] - dataset[11]
dataset[16] <- dataset[16] - dataset[11]
dataset[17] <- dataset[17] - dataset[11]
dataset[18] <- dataset[18] - dataset[11]
dataset[19] <- dataset[10] - dataset[13]
dataset[20] <- dataset[20] - dataset[13]
dataset[21] <- dataset[21] - dataset[13]
dataset[22] <- dataset[21] - dataset[13]
datasets[[n]] <- dataset %>%
filter_all(all_vars(. > 0))
n = n + 1
}
View(datasets)
View(datasets)
datasets[[1]]
all <- datasets[[1]]
mirna <- datasets[[2]]
pirna <- datasets[[3]]
smrna <- datasets[[4]]
View(mirna)
all <- read.delim("deseq_all.tsv",sep = '\t')
all <-all[-c(8702),]
all <-all[-c(4760),]
rownames(all) <- all$Geneid
all <- all[-1]
## ^^duplicate names exist
smrna <- read.delim("deseq_all_smrna.tsv",sep = '\t',row.names = 1)
mirna <-read.delim("deseq_mirna.tsv",sep = '\t',row.names = 1)
pirna <-read.delim("deseq_pirna.tsv",sep = '\t',row.names = 1)
datasets <- list(all, mirna, pirna, smrna)
corrected <- list()
n = 1
View(all)
sum(all$MED10)
sum(all$MED1)
sum(all$MED2)
sum(all$MED3)
sum(all$MED4)
for (dataset in datasets){
print(dataset)
dataset[10] <- dataset[10] - dataset[11]
dataset[16] <- dataset[16] - dataset[11]
dataset[17] <- dataset[17] - dataset[11]
dataset[18] <- dataset[18] - dataset[11]
dataset[19] <- dataset[10] - dataset[13]
dataset[20] <- dataset[20] - dataset[13]
dataset[21] <- dataset[21] - dataset[13]
dataset[22] <- dataset[21] - dataset[13]
n = n + 1
}
View(all)
n = 1
#correct
for (dataset in datasets){
corrected[[n]] <- dataset
corrected[[n]][10] <- dataset[10] - dataset[11]
corrected[[n]][16] <- dataset[16] - dataset[11]
corrected[[n]][17] <- dataset[17] - dataset[11]
corrected[[n]][18] <- dataset[18] - dataset[11]
corrected[[n]][19] <- dataset[10] - dataset[13]
corrected[[n]][20] <- dataset[20] - dataset[13]
corrected[[n]][21] <- dataset[21] - dataset[13]
corrected[[n]][22] <- dataset[21] - dataset[13]
n = n + 1
}
View(corrected)
corrected[[3]]
for (dataset in datasets){
corrected[[n]] <- dataset
corrected[[n]][10] <- dataset[10] - dataset[11]
corrected[[n]][16] <- dataset[16] - dataset[11]
corrected[[n]][17] <- dataset[17] - dataset[11]
corrected[[n]][18] <- dataset[18] - dataset[11]
corrected[[n]][19] <- dataset[10] - dataset[13]
corrected[[n]][20] <- dataset[20] - dataset[13]
corrected[[n]][21] <- dataset[21] - dataset[13]
corrected[[n]][22] <- dataset[21] - dataset[13]
corrected[[n]] <- corrected[[n]] %>%
filter_all( all_vars(. > 0))
n = n + 1
}
View(corrected)
rm(list=ls())
all <- read.delim("deseq_all.tsv",sep = '\t')
all <-all[-c(8702),]
all <-all[-c(4760),]
rownames(all) <- all$Geneid
all <- all[-1]
## ^^duplicate names exist
smrna <- read.delim("deseq_all_smrna.tsv",sep = '\t',row.names = 1)
mirna <-read.delim("deseq_mirna.tsv",sep = '\t',row.names = 1)
pirna <-read.delim("deseq_pirna.tsv",sep = '\t',row.names = 1)
datasets <- list(all, mirna, pirna, smrna)
correc
corrected <- list()
n = 1
#correct
for (dataset in datasets){
corrected[[n]] <- dataset
corrected[[n]][10] <- dataset[10] - dataset[11]
corrected[[n]][16] <- dataset[16] - dataset[11]
corrected[[n]][17] <- dataset[17] - dataset[11]
corrected[[n]][18] <- dataset[18] - dataset[11]
corrected[[n]][19] <- dataset[10] - dataset[13]
corrected[[n]][20] <- dataset[20] - dataset[13]
corrected[[n]][21] <- dataset[21] - dataset[13]
corrected[[n]][22] <- dataset[21] - dataset[13]
corrected[[n]] <- corrected[[n]] %>%
filter_all( all_vars(. > 0))
n = n + 1
}
View(corrected)
corrected <- list()
n = 1
#correct
for (dataset in datasets){
corrected[[n]] <- dataset
corrected[[n]][10] <- dataset[10] - dataset[11]
corrected[[n]][16] <- dataset[16] - dataset[11]
corrected[[n]][17] <- dataset[17] - dataset[11]
corrected[[n]][18] <- dataset[18] - dataset[11]
corrected[[n]][19] <- dataset[10] - dataset[13]
corrected[[n]][20] <- dataset[20] - dataset[13]
corrected[[n]][21] <- dataset[21] - dataset[13]
corrected[[n]][22] <- dataset[21] - dataset[13]
n = n + 1
}
all <- corrected[[1]]
mirna <- corrected[[2]]
pirna <- corrected[[3]]
smrna <- corrected[[4]]
View(corrected)
View(all)
rm(list=ls())
sheets <- openxlsx::getSheetNames('Figures_and_Results/DEGs.xlsx')
data_frame <- lapply(sheets, openxlsx::read.xlsx, xlsxFile='Figures_and_Results/DEGs.xlsx')
names(data_frame) <- sheets
View(data_frame)
View(data_frame)
genes <- read_delim('set_genes.tsv', delim = '\t')
library('openxlsx')
library('readxl')
library('ggplot2')
library('gprofiler2')
library(readr)
library('biomaRt')
library('plotly')
genes <- read_delim('set_genes.tsv', delim = '\t')
data_frame <- data_frame[2:5]
View(data_frame)
gost()
all <- read_delim('deseq_all.tsv', delim = '\t')
View(all)
all <- all %>% filter(rowMeans(all[2:24]) > 5)
rm(all)
all <- read_delim('deseq_all.tsv', delim = '\t')
all <- all %>% filter(rowMeans(all[2:24]) > 1)
all <- all %>% filter(rowMeans(all[2:24]) > 1.5)
View(data_frame)
all <- all %>% filter(rowMeans(all[2:24]) > 2)
rm(all)
View(data_frame)
SK <- data_frame[[1]][1]
View(SK)
IMR <- data_frame[[2]][1]
T47 <- data_frame[[3]][1]
HCC <- data_frame[[4]][1]
SK_select <- data_frame[[1]][1] %>% filter(data_frame[[1]][7] > .05)
IMR_select <- data_frame[[2]][1] %>% filter(data_frame[[2]][7] > .05)
T47_select <- data_frame[[3]][1] %>% filter(data_frame[[3]][7] > .05)
HCC_select <- data_frame[[4]][1] %>% filter(data_frame[[4]][7] > .05)
View(HCC_select)
View(SK)
library('openxlsx')
library('readxl')
library('ggplot2')
library('gprofiler2')
library(readr)
library('biomaRt')
library('plotly')
#import
gost_SK <- gost(query = c(SK_select[1]), organism = 'hsapiens',
significant = TRUE, measure_underrepresentation = TRUE,
domain_scope = 'custom_annotated',
custom_bg = dplyr::pull(SK, X1))
write.xlsx(gost_SK[1], 'ontology_SK.xlsx')
plot1 <- gostplot(gost_SK, interactive = TRUE)
plot1 <- plot1 %>% layout(title = 'Ontology Analysis of SK')
plot1
gost_SK <- gost(query = c(SK_select[1]), organism = 'hsapiens',
significant = TRUE,
domain_scope = 'custom_annotated',
custom_bg = dplyr::pull(SK, X1))
write.xlsx(gost_SK[1], 'ontology_SK2.xlsx')
gost_SK <- gost(query = c(SK_select[1]), organism = 'hsapiens',
significant = TRUE,
domain_scope = 'custom_annotated',
custom_bg = dplyr::pull(SK, X1))
write.xlsx(gost_SK[1], 'ontology_SK.xlsx')
gost_IMR <- gost(query = c(IMR_select[1]), organism = 'hsapiens',
significant = FALSE,
domain_scope = 'custom_annotated',
custom_bg = dplyr::pull(IMR, X1))
write.xlsx(gost_IMR[1], 'ontology_IMR.xlsx')
gost_T47 <- gost(query = c(T47_select[1]), organism = 'hsapiens',
significant = FALSE,
domain_scope = 'custom_annotated',
custom_bg = dplyr::pull(T47, X1))
write.xlsx(gost_T47[1], 'ontology_T47.xlsx')
gost_HCC <- gost(query = c(HCC_select), organism = 'hsapiens',
significant = FALSE,
domain_scope = 'custom_annotated',
custom_bg = dplyr::pull(HCC, X1))
write.xlsx(gost_HCC[1], 'Ontology_HCC.xlsx')
gost_IMR <- gost(query = c(IMR_select[1]), organism = 'hsapiens',
significant = TRUE,
domain_scope = 'custom_annotated',
custom_bg = dplyr::pull(IMR, X1))
write.xlsx(gost_IMR[1], 'ontology_IMR.xlsx')
gost_T47 <- gost(query = c(T47_select[1]), organism = 'hsapiens',
significant = TRUE,
domain_scope = 'custom_annotated',
custom_bg = dplyr::pull(T47, X1))
write.xlsx(gost_T47[1], 'ontology_T47.xlsx')
gost_HCC <- gost(query = c(HCC_select), organism = 'hsapiens',
significant = TRUE,
domain_scope = 'custom_annotated',
custom_bg = dplyr::pull(HCC, X1))
write.xlsx(gost_HCC[1], 'Ontology_HCC.xlsx')
ensembl <- useEnsembl(biomart="genes",dataset='hsapiens_gene_ensembl')
library(dpylr)
library(dyplr)
library(dylpr)
library(dyplr)
library('dyplr')
library('dplyr')
View(SK_select)
select_genes <- merge(HCC_select, IMR_select, SK_select, T47_select, by 'X1')
select_genes <- merge(HCC_select, IMR_select, SK_select, T47_select, by ='X1')
View(SK_select)
select_genes <- merge(HCC_select, IMR_select, SK_select, T47_select, by = 1)
select_genes <- merge(HCC_select, IMR_select, SK_select, T47_select, by=1)
select_genes <- merge(HCC_select, IMR_select, by=1)
select_genes <- data.frame()
select_genes <- rbind(HCC_select)
select_genes <- rbind(IMR_select)
select_genes <- rbind(HCC_select)
select_genes <- rbind(IMR_select)
select_genes <- rbind(HCC_select, IMR_select)
select_genes <- rbind(HCC_select, IMR_select, SK_select, T47_select)
select_genes <- select_genes %>%
group_by_all() %>%
filter(n() == 1)
View(select_genes)
select_genes <- rbind(HCC_select, IMR_select, SK_select, T47_select)
select_genes <- distinct(select_genes)
go_terms <- getBM(mart=ensembl, attributes=c("hgnc_symbol", "uniprot_gn_id", "uniprot_gn_symbol", "go_id", "namespace_1003", "name_1006"),
filters="hgnc_symbol", values=c(dplyr::pull(select_genes, X1)))
View(HCC_select)
View(data_frame)
